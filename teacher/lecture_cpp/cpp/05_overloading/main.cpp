#include <iostream>

using namespace std;

void print(long val) {
	cout << "long = " << val << endl;
}

void print(double val) {
	cout << "double = " << val << endl;
}

//char print_1(long i) {}
//int print_1(long i) {}


//void print(int val) {
//	cout << "int = " << val << endl;
//}

inline void print(int val) { print((long)val); }

void main() {
	// overloading = перегрузка (операторов)
	// использование одинаковых названия функций, но с разными сигнатурами (типы аргументов)

	print(1L);
	print(1.00);
	// print(1);

	// При поиске подходящей функции для перегрузки используются следующие критерии:
	// 1. Точное соответствие типов или соответствия, достигаемые тривиальными преобразованиями
	// 1.1 имя массива = указатель
	// 1.2 имя функции = указатель на функцию
	// 1.3 тип = const тип

	// 2. "Продвижение вверх"
	// 2.1 bool -> char -> short ->  
	// 2.2 float -> double

	// 3. Соответствие, достигаемое путем стандартных преобразований
	// 3.1 int -> double, double -> int, double -> long double

	// 4. Соответствие при помощи преобразований, определяемых пользователем
	
	// 5. Соответствие за счет многоточий (...)

	// Если соответствие может быть получено двумя и более способами НА ОДНОМ И ТОМ ЖЕ УРОВНЕ критериев - вызов неоднозначный

 
	// Возвращаемые типы не участвуют в разрешении перегрузки

	print(1);

	print(static_cast<long>(1));
}